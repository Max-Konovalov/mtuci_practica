from datetime import datetime
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment
from openpyxl.utils import get_column_letter
import os

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è PDF
FONT_PATH = os.path.join('static', 'fonts', 'DejaVuSans.ttf')
pdfmetrics.registerFont(TTFont('DejaVu', FONT_PATH))

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
LOGO_PATH = os.path.join('static', 'logo.png')
DEFAULT_FONT = 'DejaVu'
PDF_HEADER_SIZE = 20
PDF_NORMAL_SIZE = 12
PDF_SMALL_SIZE = 10
PDF_MARGIN = 50


def generate_pdf(count: int) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF-–æ—Ç—á—ë—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —á–µ–º–æ–¥–∞–Ω–æ–≤.
    
    :param count: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–º–æ–¥–∞–Ω–æ–≤
    :return: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –æ—Ç—á—ë—Ç–∞
    """
    file_path = 'static/report.pdf'
    c = canvas.Canvas(file_path, pagesize=A4)
    width, height = A4

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    c.setFont(DEFAULT_FONT, PDF_HEADER_SIZE)
    c.drawCentredString(width / 2, height - 80, "–û—Ç—á—ë—Ç –ø–æ –ø–æ–¥—Å—á—ë—Ç—É –±–∞–≥–∞–∂–∞")

    # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
    now = datetime.now().strftime('%d.%m.%Y %H:%M:%S')
    c.setFont(DEFAULT_FONT, PDF_NORMAL_SIZE)
    c.drawRightString(width - PDF_MARGIN, height - 50, f"–î–∞—Ç–∞: {now}")

    # –õ–æ–≥–æ—Ç–∏–ø
    if os.path.exists(LOGO_PATH):
        c.drawImage(LOGO_PATH, PDF_MARGIN, height - 120, width=80,
                    preserveAspectRatio=True, mask='auto')

    # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
    c.setStrokeColorRGB(0.5, 0.5, 0.5)  # –°–µ—Ä—ã–π —Ü–≤–µ—Ç
    c.line(PDF_MARGIN, height - 100, width - PDF_MARGIN, height - 100)

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
    c.setFont(DEFAULT_FONT, 14)
    c.drawString(100, height - 180, f"üì¶ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —á–µ–º–æ–¥–∞–Ω–æ–≤: {count}")

    # –ü–æ–¥–≤–∞–ª
    c.setFont(DEFAULT_FONT, PDF_SMALL_SIZE)
    c.setFillColorRGB(0.5, 0.5, 0.5)  # –°–µ—Ä—ã–π —Ü–≤–µ—Ç
    c.drawCentredString(width / 2, 40, "–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–∞–≥–∞–∂–∞ ¬© 2025")

    c.save()
    return file_path


def generate_excel(count: int) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Excel-—Ñ–∞–π–ª —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —á–µ–º–æ–¥–∞–Ω–æ–≤.
    
    :param count: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–º–æ–¥–∞–Ω–æ–≤
    :return: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –æ—Ç—á—ë—Ç–∞
    """
    now = datetime.now()
    now_str = now.strftime('%Y-%m-%d_%H-%M-%S')
    reports_dir = 'reports'

    os.makedirs(reports_dir, exist_ok=True)
    filename = f'{reports_dir}/report_{now_str}.xlsx'

    wb = Workbook()
    ws = wb.active
    ws.title = "–û—Ç—á—ë—Ç"

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    ws.append(['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–∞–∂–∞'])

    # –°—Ç–∏–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    header_font = Font(bold=True)
    for col in range(1, 3):
        cell = ws.cell(row=1, column=col)
        cell.font = header_font
        cell.alignment = Alignment(horizontal='center')
        ws.column_dimensions[get_column_letter(col)].width = 25

    # –î–∞–Ω–Ω—ã–µ
    ws.append([now.strftime('%d.%m.%Y %H:%M:%S'), count])

    wb.save(filename)
    return filename